#######
version: 2.1
########

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create S3 Bucket
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}"

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - persist_to_workspace:
          root: /tmp/workspace  # from variable working_directory
          paths:  # relative to root
            - id/pipelineid.txt
      - run:
          name: Get last deployment ID
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > id/pipelineid.txt

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Promote to production
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Extract Pipeline ID
          command:
            OldPipelineID=`cat id/pipelineid.txt`

      - run:
          name: Delete old pipeline ID
          command: |
            aws s3 rm "s3://${OldPipelineID}" --recursive
      - run:
          name: Delete old stack
          command: |
            aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"

workflows:
  myworkflow:
    jobs:
      - create_and_deploy_front_end
      - get_last_deployment_id
      - promote_to_production
      - clean_up_old_front_end
